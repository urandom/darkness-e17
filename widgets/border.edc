/* vim: set sw=3: */
#define BORDER_BUTTON(NAME, TYPE, REL1X, REL1Y, OFF1X, OFF1Y, TO1, REL2X, REL2Y, OFF2X, OFF2Y, TO2) \
BORDER_BUTTON_ADV(NAME,TYPE,REL1X,REL1Y,OFF1X,OFF1Y,TO1,TO1,REL2X,REL2Y,OFF2X,OFF2Y,TO2,TO2)

#define BORDER_BUTTON_ADV(NAME, TYPE, REL1X, REL1Y, OFF1X, OFF1Y, TO1X, TO1Y, REL2X, REL2Y, OFF2X, OFF2Y, TO2X, TO2Y) \
      part { \
	 name:          NAME"_bg"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   0    0; \
	       to:       NAME; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -1    -1; \
	       to:       NAME; \
	    } \
	    image { \
	       normal: "mini_button_close.png"; \
	       border: 10 10 8 8; \
	    } \
	 } \
	 description { \
	    state:    "hover" 0.0; \
	    inherit:  "default" 0.0; \
	    image { \
	       normal: "mini_button_close.png"; \
	       border: 10 10 8 8; \
	    } \
	    color:   255 255 255 0; \
	 } \
      } \
      part { \
	 name:          NAME"_hover"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    min:      30 24; \
	    color:    255 255 255 0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   0    0; \
	       to:       NAME; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -1    -1; \
	       to:       NAME; \
	    } \
	    image { \
	       normal: "mini_button_close_hover.png"; \
	       border: 10 10 8 8; \
	    } \
	 } \
	 description { \
	    state:    "hover" 0.0; \
	    inherit:  "default" 0.0; \
	    image { \
	       normal: "mini_button_close_hover.png"; \
	       border: 10 10 8 8; \
	    } \
	    color:   255 255 255 255; \
	 } \
      } \
      part { \
	 name:          NAME"_detail"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    max:      18 18; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   3    3; \
	       to:       NAME"_bg"; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -4    -4; \
	       to:       NAME"_bg"; \
	    } \
	    color:    255 255 255 200; \
	    image { \
	       normal: "button_detail_"TYPE".png"; \
	    } \
	 } \
	 description { \
	    state:    "active" 0.0; \
	    max:      18 18; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   3    3; \
	       to:       NAME"_bg"; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -4    -4; \
	       to:       NAME"_bg"; \
	    } \
	    color:    182 65 142 255; \
	    image { \
	       normal: "button_detail_"TYPE".png"; \
	    } \
	 } \
      } \
      part { \
	 name:          NAME; \
	 type:          RECT; \
	 description { \
	    state:    "default" 0.0; \
	    align:    1.0 0.0; \
	    aspect:   1.0 1.0; \
	    aspect_preference: VERTICAL; \
	    rel1 { \
	       relative: REL1X REL1Y; \
	       offset:   OFF1X OFF1Y; \
	       to_x:     TO1X; \
	       to_y:     TO1Y; \
	    } \
	    rel2 { \
	       relative: REL2X REL2Y; \
	       offset:   OFF2X OFF2Y; \
	       to_x:     TO2X; \
	       to_y:     TO2Y; \
	    } \
	    color: 0 0 0 0; \
	 } \
      } \
      part { /* a rect for window manager actions */ \
         name:          "e.event."NAME; \
         type:          RECT; \
         repeat_events: 1; \
         description { \
            state:   "default" 0.0; \
            color: 0 0 0 0; \
            rel1.to: NAME; \
            rel2.to: NAME; \
         } \
      } \

#define BORDER_BUTTON_CLOSE(REL1X, REL1Y, OFF1X, OFF1Y, TO1X, TO1Y, REL2X, REL2Y, OFF2X, OFF2Y, TO2X, TO2Y) \
      part { \
	 name:          "close_bg"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    color:    255 255 255 255; \
	    aspect:   1.25 1.25; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   0    0; \
	       to:       "close"; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -1    -1; \
	       to:       "close"; \
	    } \
	    image { \
	       normal: "mini_button_close.png"; \
	       border: 10 10 8 8; \
	    } \
	 } \
	 description { \
	    state:    "hover" 0.0; \
	    inherit:  "default" 0.0; \
	    image { \
	       normal: "mini_button_close.png"; \
	       border: 10 10 8 8; \
	    } \
	    color:   255 255 255 0; \
	 } \
      } \
      part { \
	 name:          "close"; \
	 type:          RECT; \
	 description { \
	    state:    "default" 0.0; \
	    align:    1.0 0.0; \
	    aspect:   1.0 1.0; \
	    aspect_preference: VERTICAL; \
	    rel1 { \
	       relative: REL1X REL1Y; \
	       offset:   OFF1X OFF1Y; \
	       to_x:     TO1X; \
	       to_y:     TO1Y; \
	    } \
	    rel2 { \
	       relative: REL2X REL2Y; \
	       offset:   OFF2X OFF2Y; \
	       to_x:     TO2X; \
	       to_y:     TO2Y; \
	    } \
	    color: 0 0 0 0; \
	 } \
      } \
      part { /* a rect for window manager actions */ \
         name:          "e.event.close"; \
         type:          RECT; \
         repeat_events: 1; \
         description { \
            state:   "default" 0.0; \
            color: 0 0 0 0; \
            rel1.to: "close"; \
            rel2.to: "close"; \
         } \
      } \

#define BORDER_BUTTON_MIN(REL1X, REL1Y, OFF1X, OFF1Y, TO1X, TO1Y, REL2X, REL2Y, OFF2X, OFF2Y, TO2X, TO2Y) \
      part { \
	 name:          "minimize_bg"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    color:    255 255 255 255; \
	    aspect:   1.25 1.25; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   0    0; \
	       to:       "minimize"; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -1    -1; \
	       to:       "minimize"; \
	    } \
	    image { \
	       normal: "mini_button_minimize.png"; \
	       border: 10 10 8 8; \
	    } \
	 } \
	 description { \
	    state:    "hover" 0.0; \
	    inherit:  "default" 0.0; \
	    image { \
	       normal: "mini_button_minimize.png"; \
	       border: 10 10 8 8; \
	    } \
	    color:    255 255 255 0; \
	 } \
      } \
      part { \
	 name:          "minimize"; \
	 type:          RECT; \
	 description { \
	    state:    "default" 0.0; \
	    align:    1.0 0.0; \
	    aspect:   1.0 1.0; \
	    aspect_preference: VERTICAL; \
	    rel1 { \
	       relative: REL1X REL1Y; \
	       offset:   OFF1X OFF1Y; \
	       to_x:     TO1X; \
	       to_y:     TO1Y; \
	    } \
	    rel2 { \
	       relative: REL2X REL2Y; \
	       offset:   OFF2X OFF2Y; \
	       to_x:     TO2X; \
	       to_y:     TO2Y; \
	    } \
	    color: 0 0 0 0; \
	 } \
      } \
      part { /* a rect for window manager actions */ \
         name:          "e.event.minimize"; \
         type:          RECT; \
         repeat_events: 1; \
         description { \
            state:   "default" 0.0; \
            color: 0 0 0 0; \
            rel1.to: "minimize"; \
            rel2.to: "minimize"; \
         } \
      } \

#define BORDER_BUTTON_MAX(REL1X, REL1Y, OFF1X, OFF1Y, TO1X, TO1Y, REL2X, REL2Y, OFF2X, OFF2Y, TO2X, TO2Y) \
      part { \
	 name:          "maximize_bg"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    color:    255 255 255 255; \
	    aspect:   1.833333333 1.833333333; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   0    0; \
	       to:       "maximize"; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -1    -1; \
	       to:       "maximize"; \
	    } \
	    image { \
	       normal: "mini_button_maximize.png"; \
	       border: 10 10 8 8; \
	    } \
	 } \
	 description { \
	    state:    "hover" 0.0; \
	    inherit:  "default" 0.0; \
	    image { \
	       normal: "mini_button_maximize.png"; \
	       border: 10 10 8 8; \
	    } \
	    color:   255 255 255 0; \
	 } \
      } \
      part { \
	 name:          "maximize"; \
	 type:          RECT; \
	 description { \
	    state:    "default" 0.0; \
	    align:    1.0 0.0; \
	    aspect:   1.0 1.0; \
	    aspect_preference: VERTICAL; \
	    rel1 { \
	       relative: REL1X REL1Y; \
	       offset:   OFF1X OFF1Y; \
	       to_x:     TO1X; \
	       to_y:     TO1Y; \
	    } \
	    rel2 { \
	       relative: REL2X REL2Y; \
	       offset:   OFF2X OFF2Y; \
	       to_x:     TO2X; \
	       to_y:     TO2Y; \
	    } \
	    color: 0 0 0 0; \
	 } \
      } \
      part { /* a rect for window manager actions */ \
         name:          "e.event.maximize"; \
         type:          RECT; \
         repeat_events: 1; \
         description { \
            state:   "default" 0.0; \
            color: 0 0 0 0; \
            rel1.to: "maximize"; \
            rel2.to: "maximize"; \
         } \
      } \

#define BUTTON_HOVER(NAME, ASPECT) \
      part { \
	 name:          NAME"_hover"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    color:    255 255 255 0; \
	    aspect:   ASPECT ASPECT; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   -3    0; \
	       to:       NAME; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   2    4; \
	       to:       NAME; \
	    } \
	    image { \
	       normal: "mini_button_"NAME"_hover.png"; \
	       border: 10 10 8 8; \
	    } \
	 } \
	 description { \
	    state:    "hover" 0.0; \
	    inherit:  "default" 0.0; \
	    color:   255 255 255 255; \
	 } \
      } \
      part { \
	 name:          NAME"_detail"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    max:      18 18; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   3    3; \
	       to:       NAME"_bg"; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -4    -4; \
	       to:       NAME"_bg"; \
	    } \
	    color:    255 255 255 200; \
	    image { \
	       normal: "button_detail_"NAME".png"; \
	    } \
	 } \
	 description { \
	    state:    "active" 0.0; \
	    max:      18 18; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   3    3; \
	       to:       NAME"_bg"; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -4    -4; \
	       to:       NAME"_bg"; \
	    } \
	    color:   DARKNESS_BUTTON_BLUE 200; \
	 } \
      } \

#define BORDER_MENU_ITEM(NAME, TYPE, REL1X, REL1Y, OFF1X, OFF1Y, TO1X, TO1Y, REL2X, REL2Y, OFF2X, OFF2Y, TO2X, TO2Y) \
      part { \
	 name:          NAME"_detail"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    max:      16 16; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   4    4; \
	       to:       NAME; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -6    -6; \
	       to:       NAME; \
	    } \
	    image { \
	       normal: "button_detail_"TYPE".png"; \
	    } \
	 } \
      } \
      part { \
	 name:          NAME; \
	 type:          RECT; \
	 description { \
	    state:    "default" 0.0; \
	    align:    1.0 0.0; \
	    aspect:   1.0 1.0; \
	    aspect_preference: VERTICAL; \
	    rel1 { \
	       relative: REL1X REL1Y; \
	       offset:   OFF1X OFF1Y; \
	       to_x:     TO1X; \
	       to_y:     TO1Y; \
	    } \
	    rel2 { \
	       relative: REL2X REL2Y; \
	       offset:   OFF2X OFF2Y; \
	       to_x:     TO2X; \
	       to_y:     TO2Y; \
	    } \
	    color: 0 0 0 0; \
	 } \
      } \
      part { /* a rect for window manager actions */ \
         name:          "e.event."NAME; \
         type:          RECT; \
         repeat_events: 1; \
         description { \
            state:   "default" 0.0; \
            color: 0 0 0 0; \
            rel1.to: NAME; \
            rel2.to: NAME; \
         } \
      } \

#define FULL_SIZE_BORDER_BUTTON(TYPE) \
group { \
   name:  "e/widgets/border/default/"TYPE; \
   parts { \
      part { \
	 name:           "whole"; \
	 type:           RECT; \
	 description { \
	    state: "default" 0.0; \
	    visible: 0; \
	    rel1 { \
	       relative: 0.0 0.0; \
	       offset:   0   0; \
	    } \
	    rel2 { \
	       relative: 1.0 1.0; \
	       offset:   -1  -1; \
	    } \
	 } \
      } \
      BORDER_MENU_ITEM("button",TYPE,0.0,0.0,-3,-3,"whole","whole",1.0,1.0,2,2,"whole","whole") \
   } \
}
#define BUTTON_PROGRAMS(NAME) \
      program { \
	 name:    NAME"_hover_pre"; \
	 signal:  "mouse,in"; \
	 source:  "e.event."NAME; \
	 action:  STATE_SET "default" 0.0; \
	 target:  NAME"_bg"; \
	 target:  NAME"_hover"; \
	 target:  NAME"_detail"; \
	 after:   NAME"_hover_p"; \
      } \
      program { \
	 name:    NAME"_hover_p"; \
	 action:  STATE_SET "hover" 0.0; \
	 target:  NAME"_bg"; \
	 target:  NAME"_hover"; \
	 target:  NAME"_detail"; \
	 transition: LINEAR 0.1; \
      } \
      program { \
	 name:    NAME"_out_pre"; \
	 signal:  "mouse,out"; \
	 source:  "e.event."NAME; \
	 action:  STATE_SET "hover" 0.0; \
	 target:  NAME"_bg"; \
	 target:  NAME"_hover"; \
	 target:  NAME"_detail"; \
	 after:   NAME"_out_p"; \
      } \
      program { \
	 name:    NAME"_out_p"; \
	 action:  STATE_SET "default" 0.0; \
	 target:  NAME"_bg"; \
	 target:  NAME"_hover"; \
	 target:  NAME"_detail"; \
	 transition: LINEAR 0.5; \
      } \
 \
      program { \
	 name:    NAME"_active_pre"; \
	 signal:  "mouse,down,1"; \
	 source:  "e.event."NAME; \
	 action:  STATE_SET "default" 0.0; \
	 target:  NAME"_bg"; \
	 target:  NAME"_detail"; \
	 after:   NAME"_active_p"; \
      } \
      program { \
	 name:    NAME"_active_p"; \
	 action:  STATE_SET "active" 0.0; \
	 target:  NAME"_bg"; \
	 target:  NAME"_detail"; \
	 transition: LINEAR 0.1; \
      } \
      program { \
	 name:    NAME"_passive_pre"; \
	 signal:  "mouse,up,1"; \
	 source:  "e.event."NAME; \
	 action:  STATE_SET "active" 0.0; \
	 target:  NAME"_bg"; \
	 target:  NAME"_detail"; \
	 after:   NAME"_passive_p"; \
      } \
      program { \
	 name:    NAME"_passive_p"; \
	 action:  STATE_SET "default" 0.0; \
	 target:  NAME"_bg"; \
	 target:  NAME"_detail"; \
	 transition: LINEAR 0.1; \
      } \

#define UPPER_BORDER_PARTS(T1ASPECT, T3TO, ICONTO) \
      part { \
	 name:           "whole"; \
	 type:           RECT; \
	 description { \
	    state: "default" 0.0; \
	    visible: 0; \
	    rel1 { \
	       relative: 0.0 0.0; \
	       offset:   0   0; \
	    } \
	    rel2 { \
	       relative: 1.0 1.0; \
	       offset:   -1  -1; \
	    } \
	 } \
      } \
      part { \
	 name:           "title2"; \
	 type:           TEXT; \
	 mouse_events:   0; \
	 description { \
	    state: "default" 0.0; \
	    align: 0.0 0.0; \
	    visible: 0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   0    7; \
	    } \
	    rel2 { \
	       relative: 0.0  0.0; \
	       offset:   0    7; \
	    } \
	    text { \
	       text_source:   "e.text.title"; \
	       source:        "e.text.title"; \
	       min:           0 1; \
	       text_class:    "title_bar"; \
	    } \
	 } \
      } \
      part { \
	 name:          "t1"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    align:    0.0 0.0; \
	    aspect:   T1ASPECT 1.0; \
	    aspect_preference: VERTICAL; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   0    0; \
	    } \
	    rel2 { \
	       relative: 0.0  1.0; \
	       offset:   0    5; \
	       to_y:     "title2"; \
	    } \
	    image { \
	       normal: "border1.png"; \
	       border: 6 2 8 8; \
	    } \
	    fill { \
	       smooth: 0; \
	    } \
	 } \
	 description { \
	    state:    "hidden" 0.0; \
	    inherit: "default" 0.0; \
	 } \
      } \
      part { \
	 name:          "t2"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    min:      0 1; \
	    rel1 { \
	       relative: 1.0  0.0; \
	       offset:   0    0; \
	       to:       "t1"; \
	    } \
	    rel2 { \
	       relative: 0.0  1.0; \
	       offset:   -1   -1; \
	       to:       "t3"; \
	    } \
	    image { \
	       normal: "border2.png"; \
	       border: 2 2 3 3; \
	    } \
	    fill { \
	       smooth: 0; \
	    } \
	 } \
      } \
      part { \
	 name:          "t3"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 1.0  0.0; \
	       offset:    -24  0; \
	       to_x:     T3TO; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -1    5; \
	       to_y:     "title2"; \
	    } \
	    image { \
	       normal: "border3.png"; \
	       border: 3 6 3 3; \
	    } \
	    fill { \
	       smooth: 0; \
	    } \
	 } \
	 description { \
	    state:    "hidden" 0.0; \
	    inherit: "default" 0.0; \
	 } \
      } \
      part { \
	 name:           "e.text.title"; \
	 type:           TEXT; \
	 effect:         SOFT_SHADOW; \
	 mouse_events:   0; \
	 description { \
	    state: "default" 0.0; \
	    align: 1.0 0.0; \
	    rel1 { \
	       relative: 1.0  0.0; \
	       offset:   9    7; \
	       to_x:     "t1"; \
	    } \
	    rel2 { \
	       relative: 0.0  0.0; \
	       offset:   -10  7; \
	       to_x:     "t3"; \
	    } \
	    color: 245 245 245 100; \
	    color3: DARKNESS_TITLE_BLUE 40; \
	    color_class: "border_title"; \
	    text { \
	       text:     ""; \
	       font:     "DejaVu-Bold"; \
	       size:     11; \
	       min:      0 1; \
	       align:    0.5 0.0; \
	       text_class: "title_bar"; \
	    } \
	 } \
	 description { \
	    state:    "active" 0.0; \
	    inherit: "default" 0.0; \
	    color: 245 245 245 255; \
	    color3: DARKNESS_TITLE_BLUE 100; \
	    text { \
	       text:     ""; \
	       font:     "DejaVu-Bold"; \
	       size:     11; \
	       min:      0 1; \
	       align:    0.5 0.0; \
	       text_class: "title_bar"; \
	    } \
	 } \
      } \
      part { \
	 name:          "title_hung"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    visible:  0; \
	    rel1 { \
	       relative: 1.0  0.0; \
	       offset:   4    -7; \
	       to_x:     "t1"; \
	       to_y:     "title2"; \
	    } \
	    rel2 { \
	       relative: 0.0  1.0; \
	       offset:   -2    4; \
	       to_x:     "t3"; \
	       to_y:     "title2"; \
	    } \
	    image { \
	       normal: "titlebar_hung.png"; \
	       border: 10 10 10 10; \
	    } \
	    color: 255 255 255 0; \
	 } \
	 description { \
	    state:    "hung" 0.0; \
	    inherit:  "default" 0.0; \
	    visible:  1; \
	    color: 255 255 255 255; \
	 } \
      } \
      part { \
	 name:          "e.swallow.icon"; \
	 type:          SWALLOW; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   5    5; \
	       to:       ICONTO; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -5   -6; \
	       to:       ICONTO; \
	    } \
	 } \
      } \
      part { \
	 name:          "top_focus"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    color: 255 255 255 0; \
	    rel1 { \
	       relative: 0.0  1.0; \
	       offset:   1    -9; \
	       to: "t1"; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -2   -1; \
	       to: "t3"; \
	    } \
	    image { \
	       normal: "border_top_focus.png"; \
	    } \
	    fill { \
	       smooth: 1; \
	    } \
	 } \
	 description { \
	    state: "active" 0.0; \
	    inherit: "default" 0.0; \
	    color: 255 255 255 100; \
	 } \
      } \

#define LOWER_BORDER_PARTS \
      part { \
	 name:          "b1"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 1.0  1.0; \
	       offset:   -4   0; \
	       to_y:     "t3"; \
	    } \
	    rel2 { \
	       relative: 1.0  0.0; \
	       offset:   -1   -1; \
	       to_y:     "b2"; \
	    } \
	    image { \
	       normal: "border4.png"; \
	    } \
	    fill { \
	       smooth: 0; \
	    } \
	 } \
	 description { \
	    state:    "hidden" 0.0; \
	    visible:  0; \
	    rel1 { \
	       relative: 1.0  1.0; \
	       offset:   0    0; \
	       to_y:     "t3"; \
	    } \
	    rel2 { \
	       relative: 1.0  0.0; \
	       offset:   -1   -1; \
	       to_y:     "b2"; \
	    } \
	 } \
      } \
      part { \
	 name:          "b2"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 1.0  1.0; \
	       offset:   -4   -4; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -1   -1; \
	    } \
	    image { \
	       normal: "border5.png"; \
	       border: 1 1 1 1; \
	    } \
	    fill { \
	       smooth: 0; \
	    } \
	 } \
	 description { \
	    state:    "hidden" 0.0; \
	    visible:  0; \
	    rel1 { \
	       relative: 1.0  1.0; \
	       offset:   0    0; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -1   -1; \
	    } \
	 } \
      } \
      part { \
	 name:          "b3"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 1.0  0.0; \
	       offset:   0    0; \
	       to:       "b4"; \
	    } \
	    rel2 { \
	       relative: 0.0  1.0; \
	       offset:   -1   -1; \
	       to:       "b2"; \
	    } \
	    image { \
	       normal: "border6.png"; \
	    } \
	    fill { \
	       smooth: 0; \
	    } \
	 } \
	 description { \
	    state:    "hidden" 0.0; \
	    visible:  0; \
	    rel1 { \
	       relative: 1.0  0.0; \
	       offset:   0    0; \
	       to:       "b4"; \
	    } \
	    rel2 { \
	       relative: 0.0  1.0; \
	       offset:   -1   -1; \
	       to:       "b2"; \
	    } \
	 } \
      } \
      part { \
	 name:          "b4"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 0.0  1.0; \
	       offset:   0    -4; \
	    } \
	    rel2 { \
	       relative: 0.0  1.0; \
	       offset:   3    -1; \
	    } \
	    image { \
	       normal: "border7.png"; \
	       border: 1 1 1 1; \
	    } \
	    fill { \
	       smooth: 0; \
	    } \
	 } \
	 description { \
	    state:    "hidden" 0.0; \
	    visible:  0; \
	    rel1 { \
	       relative: 0.0  1.0; \
	       offset:   0    0; \
	    } \
	    rel2 { \
	       relative: 0.0  1.0; \
	       offset:   -1    -1; \
	    } \
	 } \
      } \
      part { \
	 name:          "b5"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 0.0  1.0; \
	       offset:   0    0; \
	       to_y:     "t1"; \
	    } \
	    rel2 { \
	       relative: 0.0  0.0; \
	       offset:   3    -1; \
	       to_y:     "b4"; \
	    } \
	    image { \
	       normal: "border8.png"; \
	    } \
	    fill { \
	       smooth: 0; \
	    } \
	 } \
	 description { \
	    state:    "hidden" 0.0; \
	    visible:  0; \
	    rel1 { \
	       relative: 0.0  1.0; \
	       offset:   0    0; \
	       to_y:     "t1"; \
	    } \
	    rel2 { \
	       relative: 0.0  0.0; \
	       offset:   -1   -1; \
	       to_y:     "b4"; \
	    } \
	    image { \
	       normal: "border4.png"; \
	    } \
	    fill { \
	       smooth: 0; \
	    } \
	 } \
      } \

#define BORDER_RESIZE_PARTS \
      part { \
	 name:          "e.event.resize.l"; \
	 type:          RECT; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 0.0  1.0; \
	       offset:   0    0; \
	       to_y:     "t1"; \
	    } \
	    rel2 { \
	       relative: 0.0  1.0; \
	       offset:   3    -1; \
	    } \
	    color: 0 0 0 0; \
	 } \
      } \
      part { \
	 name:          "e.event.resize.r"; \
	 type:          RECT; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 1.0  1.0; \
	       offset:   -4    0; \
	       to_y:     "t3"; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -1    -1; \
	    } \
	    color: 0 0 0 0; \
	 } \
      } \
      part { \
	 name:          "e.event.resize.b"; \
	 type:          RECT; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 0.0  1.0; \
	       offset:   0    -4; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -1    -1; \
	    } \
	    color: 0 0 0 0; \
	 } \
      } \
      part { \
	 name:          "e.event.resize.bl"; \
	 type:          RECT; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 0.0  1.0; \
	       offset:   0    -24; \
	    } \
	    rel2 { \
	       relative: 0.0  1.0; \
	       offset:   23    -1; \
	    } \
	    color: 0 0 0 0; \
	 } \
      } \
      part { \
	 name:          "e.event.resize.br"; \
	 type:          RECT; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 1.0  1.0; \
	       offset:   -24  -24; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -1    -1; \
	    } \
	    color: 0 0 0 0; \
	 } \
      } \

#define BORDER_SWALLOW_CLIENT \
      part { \
	 name:          "e.swallow.client"; \
	 type:          SWALLOW; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 1.0  1.0; \
	       offset:   0    0; \
	       to_x:     "b5"; \
	       to_y:     "t1"; \
	    } \
	    rel2 { \
	       relative: 0.0  0.0; \
	       offset:   -1   -1; \
	       to:       "b2"; \
	    } \
	 } \
      } \

#define BORDER_EVENTS_OVERLAY \
      part { \
	 name:          "e.event.icon"; \
	 type:          RECT; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       to:    "e.swallow.icon"; \
	    } \
	    rel2 { \
	       to:    "e.swallow.icon"; \
	    } \
	    color: 0 0 0 0; \
	 } \
      } \
      part { \
	 name:          "e.event.titlebar"; \
	 type:          RECT; \
	 description { \
	    state:    "default" 0.0; \
	    min:      14 14; \
	    rel1 { \
	       relative: 1.0  0.0; \
	       offset:   0    -7; \
	       to_x:     "t1"; \
	       to_y:     "title2"; \
	    } \
	    rel2 { \
	       relative: 0.0  1.0; \
	       offset:   -2    4; \
	       to_x:     "t3"; \
	       to_y:     "title2"; \
	    } \
	    color: 0 0 0 0; \
	 } \
      } \
      part { \
	 name:          "title_overlay"; \
	 mouse_events:  0; \
	 description { \
	    state:    "default" 0.0; \
	    visible:  1; \
	    color: 255 255 255 255; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   0    0; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   0   0; \
	       to_y: "t1"; \
	    } \
	    image { \
	       normal: "border_top_u.png"; \
	       border: 10 10 8 8; \
	    } \
	 } \
      } \

#define BORDER_FOCUS_PROGRAMS \
      program { \
	 name:    "go_active_pre"; \
	 signal:  "e,state,focused"; \
	 source:  "e"; \
	 action:  STATE_SET "default" 0.0; \
	 target:  "e.text.title"; \
	 target:  "top_focus"; \
	 after:   "go_active"; \
      } \
      program { \
	 name:    "go_active"; \
	 action:  STATE_SET "active" 0.0; \
	 target:  "e.text.title"; \
	 target:  "top_focus"; \
	 transition: LINEAR 0.05; \
      } \
 \
      program { \
	 name:    "go_passive_pre"; \
	 signal:  "e,state,unfocused"; \
	 source:  "e"; \
	 action:  STATE_SET "active" 0.0; \
	 target:  "e.text.title"; \
	 target:  "top_focus"; \
	 after:   "go_passive"; \
      } \
      program { \
	 name:    "go_passive"; \
	 action:  STATE_SET "default" 0.0; \
	 target:  "e.text.title"; \
	 target:  "top_focus"; \
	 transition: LINEAR 0.1; \
      } \

#define BORDER_FULLSCREEN_PROGRAMS \
      program { \
	 name:    "maximize_fullscreen"; \
	 signal:  "e,action,maximize,fullscreen"; \
	 source:  "e"; \
	 action:  STATE_SET "hidden" 0.0; \
	 target:  "t1"; \
	 target:  "t3"; \
	 target:  "b1"; \
	 target:  "b2"; \
	 target:  "b3"; \
	 target:  "b4"; \
	 target:  "b5"; \
      } \
      program { \
	 name:    "unmaximize_fullscreen"; \
	 signal:  "e,action,unmaximize,fullscreen"; \
	 source:  "e"; \
	 action:  STATE_SET "default" 0.0; \
	 target:  "t1"; \
	 target:  "t3"; \
	 target:  "b1"; \
	 target:  "b2"; \
	 target:  "b3"; \
	 target:  "b4"; \
	 target:  "b5"; \
      } \

#define BORDER_HUNG_PROGRAMS \
      program { \
	 name:    "go_hung"; \
	 signal:  "e,state,hung"; \
	 source:  "e"; \
	 action:  STATE_SET "hung" 0.0; \
	 target:  "title_hung"; \
         transition: DECELERATE 0.5; \
	 after:   "go_hung2"; \
      } \
      program { \
	 name:    "go_hung2"; \
	 action:  STATE_SET "default" 0.0; \
	 target:  "title_hung"; \
         transition: SINUSOIDAL 1.0; \
	 after:   "go_hung"; \
      } \
      program { \
	 name:    "go_unhung"; \
	 signal:  "e,state,unhung"; \
	 source:  "e"; \
	 action:  ACTION_STOP; \
	 target:  "go_hung"; \
	 target:  "go_hung2"; \
	 after:   "go_unhung2"; \
      } \
      program { \
	 name:    "go_unhung2"; \
	 action:  STATE_SET "default" 0.0; \
	 target:  "title_hung"; \
      } \

group {
   name: "e/widgets/border/default/border";
   data {
      item: "shaped" "1";
   }
   parts {
      UPPER_BORDER_PARTS(3.3, "whole", "t3")
      LOWER_BORDER_PARTS
      BORDER_RESIZE_PARTS
      BORDER_SWALLOW_CLIENT

      BORDER_BUTTON_MAX(0.0,0.0, 0,2,"t1", "t1",1.0,1.0,-6,2,"t1", "title2")
      BORDER_BUTTON_MIN(0.0,0.0,22,0,"maximize","maximize",0.0,1.0,-6,-1,"maximize","maximize")
      BORDER_BUTTON_CLOSE(0.0,0.0,2,0,"minimize","minimize",0.0,1.0,-8,-1,"minimize","minimize")
      BUTTON_HOVER("maximize", 1.72414);
      BUTTON_HOVER("minimize", 1.24138);
      BUTTON_HOVER("close", 1.24138);

      BORDER_EVENTS_OVERLAY
   }
   programs {
      BORDER_FOCUS_PROGRAMS

      BUTTON_PROGRAMS("close")
      BUTTON_PROGRAMS("maximize")
      BUTTON_PROGRAMS("minimize")

      BORDER_FULLSCREEN_PROGRAMS
      BORDER_HUNG_PROGRAMS
  }
}

group {
   name: "e/widgets/border/noresize/border";
   data {
      item: "shaped" "1";
   }
   parts {
      UPPER_BORDER_PARTS(3.3, "whole", "t3")
      LOWER_BORDER_PARTS
      BORDER_RESIZE_PARTS
      BORDER_SWALLOW_CLIENT

      BORDER_BUTTON_MIN(0.0,0.0, -32,2,"t1", "t1",1.0,1.0,-35,2,"t1", "title2")
      BORDER_BUTTON_CLOSE(0.0,0.0,2,0,"minimize","minimize",0.0,1.0,-8,-1,"minimize","minimize")
      BUTTON_HOVER("minimize", 1.24138);
      BUTTON_HOVER("close", 1.24138);

      BORDER_EVENTS_OVERLAY
   }
   programs {
      BORDER_FOCUS_PROGRAMS

      BUTTON_PROGRAMS("close")
      BUTTON_PROGRAMS("minimize")

      BORDER_FULLSCREEN_PROGRAMS
      BORDER_HUNG_PROGRAMS
  }
}

group {
   name: "e/widgets/border/alternate/border";
   data {
      item: "shaped" "1";
   }
   parts {
      UPPER_BORDER_PARTS(1.0, "e.event.minimize", "t1");
      LOWER_BORDER_PARTS
      BORDER_RESIZE_PARTS
      BORDER_SWALLOW_CLIENT

      BORDER_BUTTON_CLOSE(0.0,0.0, 1,1,"whole", "whole",1.0,1.0,-6,2,"whole", "title2")
      BORDER_BUTTON_MAX(0.0,0.0,-30,1,"close","close",0.0,1.0,-16,-2,"close","close")
      BORDER_BUTTON_MIN(0.0,0.0,-9,0,"maximize","maximize",0.0,1.0,-6,-1,"maximize","maximize")
      BUTTON_HOVER("maximize", 1.72414);
      BUTTON_HOVER("minimize", 1.24138);
      BUTTON_HOVER("close", 1.24138);

      BORDER_EVENTS_OVERLAY
   }
   programs {
      BORDER_FOCUS_PROGRAMS

      BUTTON_PROGRAMS("close")
      BUTTON_PROGRAMS("maximize")
      BUTTON_PROGRAMS("minimize")

      BORDER_FULLSCREEN_PROGRAMS
      BORDER_HUNG_PROGRAMS
  }
}

group {
   name: "e/widgets/border/shaped/border";
   data {
      item: "shaped" "1";
   }
   parts {
      part {
	 name:          "e.event.resize.br";
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       relative: 1.0  1.0;
	       offset:   -24   -24;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -1   -1;
	    }
	    image {
	       normal: "border5.png";
	       border: 1 1 1 1;
	    }
	    fill {
	       smooth: 0;
	    }
	 }
	 description {
	    state:    "hidden" 0.0;
	    visible:  0;
	    rel1 {
	       relative: 1.0  1.0;
	       offset:   0    0;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -1   -1;
	    }
	    image {
	       normal: "border5.png";
	       border: 1 1 1 1;
	    }
	    fill {
	       smooth: 0;
	    }
	 }
      }
      part {
	 name:          "e.event.resize.bl";
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       relative: 0.0  1.0;
	       offset:   0    -24;
	    }
	    rel2 {
	       relative: 0.0  1.0;
	       offset:   23   -1;
	    }
	    image {
	       normal: "border7.png";
	       border: 1 1 1 1;
	    }
	    fill {
	       smooth: 0;
	    }
	 }
	 description {
	    state:    "hidden" 0.0;
	    visible:  0;
	    rel1 {
	       relative: 0.0  1.0;
	       offset:   0    0;
	    }
	    rel2 {
	       relative: 0.0  1.0;
	       offset:   -1    -1;
	    }
	    image {
	       normal: "border7.png";
	       border: 1 1 1 1;
	    }
	    fill {
	       smooth: 0;
	    }
	 }
      }
      UPPER_BORDER_PARTS(3.3, "whole", "t3");
      part {
	 name:          "e.swallow.client";
	 type:          SWALLOW;
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       relative: 0.0  1.0;
	       offset:   4    0;
	       to_x:     "e.event.resize.bl";
	       to_y:     "t1";
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -5   -5;
	       to:       "e.event.resize.br";
	    }
	 }
      }

      BORDER_BUTTON_MAX(0.0,0.0,0,2,"t1", "t1",1.0,1.0,-6,2,"t1", "title2")
      BORDER_BUTTON_MIN(0.0,0.0,22,0,"maximize","maximize",0.0,1.0,-6,-1,"maximize","maximize")
      BORDER_BUTTON_CLOSE(0.0,0.0,2,0,"minimize","minimize",0.0,1.0,-8,-1,"minimize","minimize")
      BUTTON_HOVER("maximize", 1.72414);
      BUTTON_HOVER("minimize", 1.24138);
      BUTTON_HOVER("close", 1.24138);

      BORDER_EVENTS_OVERLAY
   }
   programs {
      BORDER_FOCUS_PROGRAMS

      BUTTON_PROGRAMS("close")
      BUTTON_PROGRAMS("maximize")
      BUTTON_PROGRAMS("minimize")

      program {
	 name:    "maximize_fullscreen";
	 signal:  "e,action,maximize,fullscreen";
	 source:  "e";
	 action:  STATE_SET "hidden" 0.0;
	 target:  "e.event.resize.bl";
	 target:  "e.event.resize.br";
      }
      program {
	 name:    "unmaximize_fullscreen";
	 signal:  "e,action,unmaximize,fullscreen";
	 source:  "e";
	 action:  STATE_SET "default" 0.0;
	 target:  "e.event.resize.bl";
	 target:  "e.event.resize.br";
      }

      BORDER_HUNG_PROGRAMS
  }
}

group {
   name: "e/widgets/border/dialog/border";
   data {
      item: "shaped" "1";
   }
   parts {
      UPPER_BORDER_PARTS(1.13,"whole","t3")
      LOWER_BORDER_PARTS
      BORDER_RESIZE_PARTS
      BORDER_SWALLOW_CLIENT

      BORDER_BUTTON_CLOSE(0.0,0.0, 2,2,"t1", "t1",1.0,1.0,-3,2,"t1", "title2")
      BUTTON_HOVER("close", 1.24138);

      BORDER_EVENTS_OVERLAY
   }
   programs {
      BORDER_FOCUS_PROGRAMS
      BUTTON_PROGRAMS("close")

      BORDER_HUNG_PROGRAMS
  }
}

group {
   name: "e/widgets/border/noresize_dialog/border";
   data {
      item: "shaped" "1";
   }
   parts {
      UPPER_BORDER_PARTS(1.13,"whole","t3")
      LOWER_BORDER_PARTS
      BORDER_SWALLOW_CLIENT

      BORDER_BUTTON_CLOSE(0.0,0.0, 2,2,"t1", "t1",1.0,1.0,-3,2,"t1", "title2")
      BUTTON_HOVER("close", 1.24138);

      BORDER_EVENTS_OVERLAY
   }
   programs {
      BORDER_FOCUS_PROGRAMS
      BUTTON_PROGRAMS("close")

      BORDER_HUNG_PROGRAMS
  }
}

group {
   name: "e/widgets/border/buttonless/border";
   data {
      item: "shaped" "1";
   }
   parts {
      UPPER_BORDER_PARTS(1.1, "whole", "t3")
      LOWER_BORDER_PARTS
      BORDER_RESIZE_PARTS
      BORDER_SWALLOW_CLIENT

      BORDER_EVENTS_OVERLAY
   }
   programs {
      BORDER_FOCUS_PROGRAMS

      BORDER_FULLSCREEN_PROGRAMS
      BORDER_HUNG_PROGRAMS
  }
}

group {
   name: "e/widgets/border/pixel/border";
   parts {
      part {
	 name:           "pixel1";
	 type:           RECT;
	 description {
	    state: "default" 0.0;
	    rel1 {
	       relative: 0.0 0.0;
	       offset:   0   0;
	    }
	    rel2 {
	       relative: 1.0 0.0;
	       offset:   -1  0;
	    }
	    color: 0 0 0 255;
	 }
      }
      part {
	 name:           "pixel2";
	 type:           RECT;
	 description {
	    state: "default" 0.0;
	    rel1 {
	       relative: 0.0 1.0;
	       offset:   0   -1;
	    }
	    rel2 {
	       relative: 1.0 1.0;
	       offset:   -1  -1;
	    }
	    color: 0 0 0 255;
	 }
      }
      part {
	 name:           "pixel3";
	 type:           RECT;
	 description {
	    state: "default" 0.0;
	    rel1 {
	       relative: 0.0 0.0;
	       offset:   0   1;
	    }
	    rel2 {
	       relative: 0.0 1.0;
	       offset:   0  -2;
	    }
	    color: 0 0 0 255;
	 }
      }
      part {
	 name:           "pixel4";
	 type:           RECT;
	 description {
	    state: "default" 0.0;
	    rel1 {
	       relative: 1.0 0.0;
	       offset:   -1  1;
	    }
	    rel2 {
	       relative: 1.0 1.0;
	       offset:   -1  -2;
	    }
	    color: 0 0 0 255;
	 }
      }
      part {
	 name:          "e.swallow.client";
	 type:          SWALLOW;
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       relative: 0.0  0.0;
	       offset:   1    1;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -2   -2;
	    }
	 }
      }
   }
}

FULL_SIZE_BORDER_BUTTON("close")
FULL_SIZE_BORDER_BUTTON("minimize")
FULL_SIZE_BORDER_BUTTON("maximize")
FULL_SIZE_BORDER_BUTTON("shade")
FULL_SIZE_BORDER_BUTTON("stick")
FULL_SIZE_BORDER_BUTTON("kill")
FULL_SIZE_BORDER_BUTTON("locks")
FULL_SIZE_BORDER_BUTTON("locks_user")
FULL_SIZE_BORDER_BUTTON("locks_application")
FULL_SIZE_BORDER_BUTTON("borderless")
FULL_SIZE_BORDER_BUTTON("fullscreen")
FULL_SIZE_BORDER_BUTTON("remember")
FULL_SIZE_BORDER_BUTTON("skip_winlist")
FULL_SIZE_BORDER_BUTTON("skip")
FULL_SIZE_BORDER_BUTTON("skip_pager")
FULL_SIZE_BORDER_BUTTON("sendto")
FULL_SIZE_BORDER_BUTTON("stacking")
FULL_SIZE_BORDER_BUTTON("stack_on_top")
FULL_SIZE_BORDER_BUTTON("stack_normal")
FULL_SIZE_BORDER_BUTTON("stack_below")
FULL_SIZE_BORDER_BUTTON("properties")
