/* vim: set sw=3: */
#define BASE_HORIZ_DESC \
	 description { \
	    state:    "top_left" 0.0; \
	    inherit:  "default" 0.0; \
	    fill { \
	       origin { \
		  offset: -16 -6; \
	       } \
	       size { \
		  offset: 16 6; \
	       } \
	    } \
	 } \
	 description { \
	    state:    "top_right" 0.0; \
	    inherit:  "default" 0.0; \
	    fill { \
	       origin { \
		  offset: 0 -6; \
	       } \
	       size { \
		  offset: 16 6; \
	       } \
	    } \
	 } \
	 description { \
	    state:    "bottom" 0.0; \
	    inherit:  "default" 0.0; \
	    fill { \
	       origin { \
		  offset: 0 0; \
	       } \
	       size { \
		  offset: 0 6; \
	       } \
	    } \
	 } \
	 description { \
	    state:    "bottom_left" 0.0; \
            inherit:  "default" 0.0; \
	    fill { \
	       origin { \
		  offset: -16 0; \
	       } \
	       size { \
		  offset: 16 6; \
	       } \
	    } \
	 } \
	 description { \
	    state:    "bottom_right" 0.0; \
            inherit:  "default" 0.0; \
	    fill { \
	       origin { \
		  offset: 0 0; \
	       } \
	       size { \
		  offset: 16 6; \
	       } \
	    } \
	 } \

#define BASE_VERT_DESC \
	 description { \
	    state:    "left_top" 0.0; \
	    inherit:  "left" 0.0; \
	    fill { \
	       origin { \
		  offset: -6 -16; \
	       } \
	       size { \
		  offset: 6 16; \
	       } \
	    } \
	 } \
	 description { \
	    state:    "left_bottom" 0.0; \
	    inherit:  "left" 0.0; \
	    fill { \
	       origin { \
		  offset: -6 0; \
	       } \
	       size { \
		  offset: 6 16; \
	       } \
	    } \
	 } \
	 description { \
	    state:    "right" 0.0; \
	    inherit:  "left" 0.0; \
	    fill { \
	       origin { \
		  offset: 0 0; \
	       } \
	       size { \
		  offset: 6 0; \
	       } \
	    } \
	 } \
	 description { \
	    state:    "right_top" 0.0; \
	    inherit:  "left" 0.0; \
	    fill { \
	       origin { \
		  offset: 0 -16; \
	       } \
	       size { \
		  offset: 6 16; \
	       } \
	    } \
	 } \
	 description { \
	    state:    "right_bottom" 0.0; \
	    inherit:  "left" 0.0; \
	    fill { \
	       origin { \
		  offset: 0 0; \
	       } \
	       size { \
		  offset: 6 16; \
	       } \
	    } \
	 } \

#define SWALLOW_PART \
      part { \
	 name:          "e.swallow.content"; \
	 type:          SWALLOW; \
	 description { \
	    state:    "default" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   8   2; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -9   -3; \
	    } \
	 } \
	 description { \
	    state:    "top_left" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   2    2; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -9   -3; \
	    } \
	 } \
	 description { \
	    state:    "top_right" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   8   2; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -3   -3; \
	    } \
	 } \
	 description { \
	    state:    "bottom" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   8   2; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -9   -3; \
	    } \
	 } \
	 description { \
	    state:    "bottom_left" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   2   2; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -9   -3; \
	    } \
	 } \
	 description { \
	    state:    "bottom_right" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   8   2; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -3   -3; \
	    } \
	 } \
	 description { \
	    state:    "left" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   2    8; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -3   -9; \
	    } \
	 } \
	 description { \
	    state:    "left_top" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   2    2; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -3   -9; \
	    } \
	 } \
	 description { \
	    state:    "left_bottom" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   2    8; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -3   -3; \
	    } \
	 } \
	 description { \
	    state:    "right" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   2    8; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -3   -9; \
	    } \
	 } \
	 description { \
	    state:    "right_top" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   2    2; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -3   -9; \
	    } \
	 } \
	 description { \
	    state:    "right_bottom" 0.0; \
	    rel1 { \
	       relative: 0.0  0.0; \
	       offset:   2    8; \
	    } \
	    rel2 { \
	       relative: 1.0  1.0; \
	       offset:   -3   -3; \
	    } \
	 } \
      } \

#define ORIENT_PROGRAMS \
      program { \
	 name:    "orient1"; \
	 signal:  "e,state,orientation,top"; \
	 source:  "e"; \
	 action:  STATE_SET "default" 0.0; \
	 target:  "base"; \
	 target:  "e.swallow.content"; \
      } \
      program { \
	 name:    "orient2"; \
	 signal:  "e,state,orientation,top_left"; \
	 source:  "e"; \
	 action:  STATE_SET "top_left" 0.0; \
	 target:  "base"; \
	 target:  "e.swallow.content"; \
      } \
      program { \
	 name:    "orient3"; \
	 signal:  "e,state,orientation,top_right"; \
	 source:  "e"; \
	 action:  STATE_SET "top_right" 0.0; \
	 target:  "base"; \
	 target:  "e.swallow.content"; \
      } \
      program { \
	 name:    "orient4"; \
	 signal:  "e,state,orientation,bottom"; \
	 source:  "e"; \
	 action:  STATE_SET "bottom" 0.0; \
	 target:  "base"; \
	 target:  "e.swallow.content"; \
      } \
      program { \
	 name:    "orient5"; \
	 signal:  "e,state,orientation,bottom_left"; \
	 source:  "e"; \
	 action:  STATE_SET "bottom_left" 0.0; \
	 target:  "base"; \
	 target:  "e.swallow.content"; \
      } \
      program { \
	 name:    "orient6"; \
	 signal:  "e,state,orientation,bottom_right"; \
	 source:  "e"; \
	 action:  STATE_SET "bottom_right" 0.0; \
	 target:  "base"; \
	 target:  "e.swallow.content"; \
      } \
      program { \
	 name:    "orient7"; \
	 signal:  "e,state,orientation,left"; \
	 source:  "e"; \
	 action:  STATE_SET "left" 0.0; \
	 target:  "base"; \
	 target:  "e.swallow.content"; \
      } \
      program { \
	 name:    "orient8"; \
	 signal:  "e,state,orientation,left_top"; \
	 source:  "e"; \
	 action:  STATE_SET "left_top" 0.0; \
	 target:  "base"; \
	 target:  "e.swallow.content"; \
      } \
      program { \
	 name:    "orient9"; \
	 signal:  "e,state,orientation,left_bottom"; \
	 source:  "e"; \
	 action:  STATE_SET "left_bottom" 0.0; \
	 target:  "base"; \
	 target:  "e.swallow.content"; \
      } \
      program { \
	 name:    "orient10"; \
	 signal:  "e,state,orientation,right"; \
	 source:  "e"; \
	 action:  STATE_SET "right" 0.0; \
	 target:  "base"; \
	 target:  "e.swallow.content"; \
      } \
      program { \
	 name:    "orient11"; \
	 signal:  "e,state,orientation,right_top"; \
	 source:  "e"; \
	 action:  STATE_SET "right_top" 0.0; \
	 target:  "base"; \
	 target:  "e.swallow.content"; \
      } \
      program { \
	 name:    "orient12"; \
	 signal:  "e,state,orientation,right_bottom"; \
	 source:  "e"; \
	 action:  STATE_SET "right_bottom" 0.0; \
	 target:  "base"; \
	 target:  "e.swallow.content"; \
      } \

group {
   name: "e/shelf/default/base";
   data {
      // this tells e the border is shaped
      item: "shaped" "1";
   }
   parts {
      part {
	 name:          "base";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    image {
	       normal: "shelf_bg_border_h.png";
	       border: 19 19 9 9;
	    }
	    fill {
	       origin {
		  offset: 0 -6;
	       }
	       size {
		  offset: 0 6;
	       }
	    }
	 }
	 BASE_HORIZ_DESC
	 description {
	    state:    "left" 0.0;
	    image {
	       normal: "shelf_bg_border_v.png";
	       border: 9 9 19 19;
	    }
	    fill {
	       origin {
		  offset: -6 0;
	       }
	       size {
		  offset: 6 0;
	       }
	    }
	 }
	 BASE_VERT_DESC
      }
      SWALLOW_PART
   }
   programs {
      ORIENT_PROGRAMS
   }
}
group {
   name: "e/shelf/default/inset";
   parts {
      part {
	 name:          "background";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    color: 100 100 100 255;
	    rel1 {
	       to:       "overlay";
	    }
	    rel2 {
	       to:       "overlay";
	    }
	    image {
	       normal: "ibar_bg_h.png";
	       border: 6 6 6 6;
	    }
	    fill {
	       smooth: 0;
	    }
	 }
      }
      part {
	 name:          "items_clip";
	 type:          RECT;
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       to:       "background";
	       offset:   4    4;
	    }
	    rel2 {
	       to:       "background";
	       offset:   -5    -5;
	    }
	    color: 255 255 255 255;
	 }
      }
      part {
	 name:          "e.swallow.content";
	 type:          SWALLOW;
	 clip_to:       "items_clip";
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       offset:   4    4;
	    }
	    rel2 {
	       offset:   -5    -5;
	    }
	 }
      }
      part {
	 name:          "overlay";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    color:    DARKNESS_DARK_BLUE 255;
	    image {
	       normal: "ibar_over_h.png";
	       border: 13 13 13 13;
	       middle: 0;
	    }
	    fill {
	       smooth: 0;
	    }
	 }
      }
   }
}

group {
   name: "e/shelf/alternate/base";
   data {
      // this tells e the border is shaped
//      item: "shaped" "1";
   }
   parts {
      part {
	 name:          "base";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    image {
	       normal: "shelf_bg_h.png";
	       border: 19 19 9 9;
	    }
	    fill {
	       origin {
		  offset: 0 -6;
	       }
	       size {
		  offset: 0 6;
	       }
	    }
	 }
	 BASE_HORIZ_DESC
	 description {
	    state:    "left" 0.0;
	    image {
	       normal: "shelf_bg_v.png";
	       border: 9 9 19 19;
	    }
	    fill {
	       origin {
		  offset: -6 0;
	       }
	       size {
		  offset: 6 0;
	       }
	    }
	 }
	 BASE_VERT_DESC
      }
      SWALLOW_PART
   }
   programs {
      ORIENT_PROGRAMS
   }
}
group {
   name: "e/shelf/alternate/inset";
   parts {
      part {
	 name:          "background";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    color: 100 100 100 255;
	    rel1 {
	       to:       "overlay";
	    }
	    rel2 {
	       to:       "overlay";
	    }
	    image {
	       normal: "ibar_bg_h.png";
	       border: 6 6 6 6;
	    }
	    fill {
	       smooth: 0;
	    }
	 }
      }
      part {
	 name:          "items_clip";
	 type:          RECT;
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       to:       "background";
	       offset:   4    4;
	    }
	    rel2 {
	       to:       "background";
	       offset:   -5    -5;
	    }
	    color: 255 255 255 255;
	 }
      }
      part {
	 name:          "e.swallow.content";
	 type:          SWALLOW;
	 clip_to:       "items_clip";
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       offset:   4    4;
	    }
	    rel2 {
	       offset:   -5    -5;
	    }
	 }
      }
      part {
	 name:          "overlay";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    color:    DARKNESS_DARK_BLUE 255;
	    image {
	       normal: "ibar_over_h.png";
	       border: 13 13 13 13;
	       middle: 0;
	    }
	    fill {
	       smooth: 0;
	    }
	 }
      }
   }
}

group {
   name: "e/shelf/ghost/base";
   data {
      // this tells e the border is shaped
//      item: "shaped" "1";
//      item: "instant_delay" "2.3";
   }
   parts {
      part {
	 name:          "base";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    image {
	       normal: "shelf_bg_ghost_h.png";
	       border: 19 19 9 9;
	    }
	    fill {
	       origin {
		  offset: 0 -6;
	       }
	       size {
		  offset: 0 6;
	       }
	    }
	 }
	 BASE_HORIZ_DESC
	 description {
	    state:    "left" 0.0;
	    image {
	       normal: "shelf_bg_ghost_v.png";
	       border: 9 9 19 19;
	    }
	    fill {
	       origin {
		  offset: -6 0;
	       }
	       size {
		  offset: 6 0;
	       }
	    }
	 }
	 BASE_VERT_DESC
      }
      SWALLOW_PART
   }
   programs {
      ORIENT_PROGRAMS
   }
}
group {
   name: "e/shelf/ghost/inset";
   parts {
      part {
	 name:          "background";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    color: 100 100 100 255;
	    rel1 {
	       to:       "overlay";
	    }
	    rel2 {
	       to:       "overlay";
	    }
	    image {
	       normal: "ibar_bg_h.png";
	       border: 6 6 6 6;
	    }
	    fill {
	       smooth: 0;
	    }
	 }
      }
      part {
	 name:          "items_clip";
	 type:          RECT;
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       to:       "background";
	       offset:   4    4;
	    }
	    rel2 {
	       to:       "background";
	       offset:   -5    -5;
	    }
	    color: 255 255 255 255;
	 }
      }
      part {
	 name:          "e.swallow.content";
	 type:          SWALLOW;
	 clip_to:       "items_clip";
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       offset:   4    4;
	    }
	    rel2 {
	       offset:   -5    -5;
	    }
	 }
      }
      part {
	 name:          "overlay";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    color:    DARKNESS_DARK_BLUE 255;
	    image {
	       normal: "ibar_over_h.png";
	       border: 13 13 13 13;
	       middle: 0;
	    }
	    fill {
	       smooth: 0;
	    }
	 }
      }
   }
}

group {
   name: "e/shelf/invisible/base";
   data {
      // this tells e the border is shaped
      item: "shaped" "1";
      item: "hidden_state_size" "6";
   }
   parts {
      part {
	 name:          "e.swallow.content";
	 type:          SWALLOW;
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       to: "base";
	    }
	    rel2 {
	       to: "base";
	    }
	 }
      }
      part {
	 name:          "base";
	 mouse_events:  1;
	 type:          RECT;
	 repeat_events: 1;
	 description {
	    state:    "default" 0.0;
	    color:    255 255 255 0;
	 }
	 description {
	    state:    "top_left" 0.0;
	    inherit:  "default" 0.0;
	 }
	 description {
	    state:    "top_right" 0.0;
	    inherit:  "default" 0.0;
	 }
	 description {
	    state:    "bottom" 0.0;
	    inherit:  "default" 0.0;
	 }
	 description {
	    state:    "bottom_left" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "bottom_right" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "left" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "left_top" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "left_bottom" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "right" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "right_top" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "right_bottom" 0.0;
            inherit:  "default" 0.0;
	 }
      }
      part {
	 name: "handle_n";
	 mouse_events: 1;
	 repeat_events: 1;
	 description {
	    state: "default" 0.0;
	    visible: 0;
	    align: 0.5 0.0;
	    max: 120 6;
	    color: 0 0 0 0;
	    image {
	       normal: "shelf_h_handle.png";
	       border: 2 2 2 2;
	    }
	    rel1 {
	       offset: 6 0;
	    }
	    rel2 {
	       offset: -7 0;
	    }
	 }
	 description {
	    state: "hidden" 0.0;
	    inherit: "default" 0.0;
	    visible: 1;
	    color: 255 255 255 255;
	 }
      }
      part {
	 name: "handle_e";
	 mouse_events: 1;
	 repeat_events: 1;
	 description {
	    state: "default" 0.0;
	    visible: 0;
	    align: 1.0 0.5;
	    max: 6 120;
	    color: 0 0 0 0;
	    image {
	       normal: "shelf_v_handle.png";
	       border: 2 2 2 2;
	    }
	    rel1 {
	       offset: 0 6;
	    }
	    rel2 {
	       offset: 0 -7;
	    }
	 }
	 description {
	    state: "hidden" 0.0;
	    inherit: "default" 0.0;
	    visible: 1;
	    color: 255 255 255 255;
	 }
      }
      part {
	 name: "handle_s";
	 mouse_events: 1;
	 repeat_events: 1;
	 description {
	    state: "default" 0.0;
	    visible: 0;
	    align: 0.5 1.0;
	    max: 120 6;
	    color: 0 0 0 0;
	    image {
	       normal: "shelf_h_handle.png";
	       border: 2 2 2 2;
	    }
	    rel1 {
	       offset: 6 0;
	    }
	    rel2 {
	       offset: -7 0;
	    }
	 }
	 description {
	    state: "hidden" 0.0;
	    inherit: "default" 0.0;
	    visible: 1;
	    color: 255 255 255 255;
	 }
      }
      part {
	 name: "handle_w";
	 mouse_events: 1;
	 repeat_events: 1;
	 description {
	    state: "default" 0.0;
	    visible: 0;
	    align: 0.0 0.5;
	    max: 6 120;
	    color: 0 0 0 0;
	    image {
	       normal: "shelf_v_handle.png";
	       border: 2 2 2 2;
	    }
	    rel1 {
	       offset: 0 6;
	    }
	    rel2 {
	       offset: 0 -7;
	    }
	 }
	 description {
	    state: "hidden" 0.0;
	    inherit: "default" 0.0;
	    visible: 1;
	    color: 255 255 255 255;
	 }
      }
   }
   programs {
      program {
	 name:    "hide";
	 signal:  "e,state,hidden";
	 source:  "e";
	 action:  STATE_SET "hidden" 0.0;
	 transition: DECELERATE 1.5;
	 target:  "handle_n";
	 target:  "handle_e";
	 target:  "handle_s";
	 target:  "handle_w";
      }
      program {
	 name:    "show";
	 signal:  "e,state,visible";
	 source:  "e";
	 action:  STATE_SET "default" 0.0;
	 transition: ACCELERATE 1.5;
	 target:  "handle_n";
	 target:  "handle_e";
	 target:  "handle_s";
	 target:  "handle_w";
      }

      ORIENT_PROGRAMS
   }
}
group {
   name: "e/shelf/invisible/inset";
   parts {
      part {
	 name:          "background";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    color: 100 100 100 255;
	    rel1 {
	       to:       "overlay";
	    }
	    rel2 {
	       to:       "overlay";
	    }
	    image {
	       normal: "ibar_bg_h.png";
	       border: 6 6 6 6;
	    }
	    fill {
	       smooth: 0;
	    }
	 }
      }
      part {
	 name:          "items_clip";
	 type:          RECT;
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       to:       "background";
	       offset:   4    4;
	    }
	    rel2 {
	       to:       "background";
	       offset:   -5    -5;
	    }
	    color: 255 255 255 255;
	 }
      }
      part {
	 name:          "e.swallow.content";
	 type:          SWALLOW;
	 clip_to:       "items_clip";
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       offset:   4    4;
	    }
	    rel2 {
	       offset:   -5    -5;
	    }
	 }
      }
      part {
	 name:          "overlay";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    image {
	       normal: "ibar_over_h.png";
	       border: 13 13 13 13;
	       middle: 0;
	    }
	    fill {
	       smooth: 0;
	    }
	 }
      }
   }
}
